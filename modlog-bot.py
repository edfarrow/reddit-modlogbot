import praw
import time
import datetime
import re
import ConfigParser

config = ConfigParser.ConfigParser()
config.read('reddit.ini')
username = config.get('Bot Details', 'username')
password = config.get('Bot Details', 'password')
subreddit = config.get('Reddit Details', 'subreddit')
bot_user = config.get('Reddit Details', 'bot user')
modlog = config.get('Reddit Details', 'modlog')

r = praw.Reddit("Public ModLog bot for /r/"+subreddit+" by /u/edfaz. I'm run by /u/"+bot_user+".")
r.login(username, password)

already_done_action = []
already_done_log = []

mod_log = []
mod_log_formatted = "#Mod Log for "+subreddit+" \n\n \n\n \n\n"
table_r1 = "|  Time  |  Mod  |  Target  |  Action  |  Details  | \n"
table_r2 = "|:------------:|:------------:|:------------:|:------------:|:------------:| \n"
mod_log_formatted += table_r1
mod_log_formatted += table_r2

stop = False


def timestamp_convert(timestamp):
    return datetime.datetime.fromtimestamp(int(timestamp)).strftime('%Y-%m-%d %H:%M:%S')


def remove_t3(string):
    if string is None:
        return "None"
    else:
        return re.sub('t[0-9]_', '', string)


while stop is False:
    for mod_action in r.get_subreddit(subreddit).get_mod_log():
        if remove_t3(mod_action.target_fullname) not in already_done_action:
            mod_log.append([timestamp_convert(mod_action.created_utc), mod_action.mod, remove_t3(mod_action.target_fullname), mod_action.action, mod_action.details])
            already_done_action += remove_t3(mod_action.target_fullname)
    for action in mod_log:
        if action[2] not in already_done_log:
            mod_log_temp_buffer = "| "
            mod_log_temp_buffer += action[0]
            mod_log_temp_buffer += " | "
            mod_log_temp_buffer += action[1]
            mod_log_temp_buffer += " | "
            if action[2] is "None":
                mod_log_temp_buffer += " "
            else:
                mod_log_temp_buffer += "http://www.reddit.com/r/"+subreddit+"/comments/"+action[2]
            mod_log_temp_buffer += " | "
            mod_log_temp_buffer += action[3]
            mod_log_temp_buffer += " | "
            mod_log_temp_buffer += action[4]
            mod_log_temp_buffer += " |"
            mod_log_temp_buffer += " \n"
            mod_log_formatted += mod_log_temp_buffer
            already_done_log += action[2]

    mod_log_formatted += "\n\n *** \n\n This page was generated by a bot. Please contact "+bot_user+" if there's a problem."

    print "Writing the wiki page..."
    r.edit_wiki_page(subreddit, modlog, mod_log_formatted, "Updated Mod Log")
    print "Page written!"

    print "Writing text file..."
    text_file = open("output.txt", "w")
    text_file.write(mod_log_formatted)
    text_file.close()
    print "File written!"

    print "Now sleeping..."
    time.sleep(3600)
    print "Sleep over, restarting"









